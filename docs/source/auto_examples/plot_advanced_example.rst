.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_advanced_example.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_advanced_example.py:


Advanced example
===============

Let's present how one can specify different aspects of the problem 
formulation and model selection strategy on classo, using synthetic data


.. code-block:: default


    from classo import classo_problem, random_data
    import numpy as np








Generate the data
^^^^^^^^^^^^^^^^^^^^^^^^^^^
This code snippet generates a problem instance with sparse ß in dimension
d=100 (sparsity d_nonzero=5). The design matrix X comprises n=100 samples generated from an i.i.d standard normal
distribution. The dimension of the constraint matrix C is d x k matrix. The noise level is σ=0.5. 
The input `zerosum=True` implies that C is the all-ones vector and Cß=0. The n-dimensional outcome vector y
and the regression vector ß is then generated to satisfy the given constraints. 


.. code-block:: default


    m, d, d_nonzero, k, sigma = 100, 200, 5, 1, 0.5
    (X, C, y), sol = random_data(m, d, d_nonzero, k, sigma, zerosum=True, seed=1)








Define the classo instance
^^^^^^^^^^^^^^^^^^^^^^^^^^^
Next we can define a default c-lasso problem instance with the generated data:


.. code-block:: default


    problem = classo_problem(X, y, C) 









Change the parameters
^^^^^^^^^^^^^^^^^^^^^^^^^^^
Let's see some example of change in the parameters


.. code-block:: default


    problem.formulation.huber                   = True
    problem.formulation.concomitant             = False
    problem.model_selection.CV                  = True
    problem.model_selection.LAMfixed            = True
    problem.model_selection.PATH                = True
    problem.model_selection.StabSelparameters.method = 'max'
    problem.model_selection.CVparameters.seed = 1
    problem.model_selection.LAMfixedparameters.rescaled_lam = True
    problem.model_selection.LAMfixedparameters.lam = .1










Check parameters
^^^^^^^^^^^^^^^^^^^^^^^^^^^
You can look at the generated problem instance by typing:


.. code-block:: default


    print(problem)



.. rst-class:: sphx-glr-script-out


.. code-block:: pytb

    Traceback (most recent call last):
      File "/Users/lsimpson/Desktop/GitHub/c-lasso/examples/plot_advanced_example.py", line 54, in <module>
        print(problem)
      File "/Users/lsimpson/anaconda3/envs/envthesis/lib/python3.9/site-packages/classo/solver.py", line 178, in __repr__
        + self.model_selection.LAMfixedparameters.__repr__()
      File "/Users/lsimpson/anaconda3/envs/envthesis/lib/python3.9/site-packages/classo/solver.py", line 653, in __repr__
        string += "\n     threshold = " + str(round(self.threshold, 3))
    TypeError: type NoneType doesn't define __round__ method




Solve optimization problems
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 We only use stability selection as default model selection strategy. 
The command also allows you to inspect the computed stability profile for all variables 
at the theoretical λ


.. code-block:: default


    problem.solve()


Visualisation
^^^^^^^^^^^^^^^
After completion, the results of the optimization and model selection routines 
can be visualized using


.. code-block:: default


    print(problem.solution)

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.010 seconds)


.. _sphx_glr_download_auto_examples_plot_advanced_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_advanced_example.py <plot_advanced_example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_advanced_example.ipynb <plot_advanced_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
